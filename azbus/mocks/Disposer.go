// Code generated by mockery v2.50.0. DO NOT EDIT.

package mocks

import (
	azservicebus "github.com/Azure/azure-sdk-for-go/sdk/messaging/azservicebus"
	azbus "github.com/datatrails/go-datatrails-common/azbus"

	context "context"

	mock "github.com/stretchr/testify/mock"
)

// Disposer is an autogenerated mock type for the Disposer type
type Disposer struct {
	mock.Mock
}

// Dispose provides a mock function with given fields: ctx, d, err, msg
func (_m *Disposer) Dispose(ctx context.Context, d azbus.Disposition, err error, msg *azservicebus.ReceivedMessage) {
	_m.Called(ctx, d, err, msg)
}

// NewDisposer creates a new instance of Disposer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewDisposer(t interface {
	mock.TestingT
	Cleanup(func())
}) *Disposer {
	mock := &Disposer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
